stream
    |from()
        .measurement('cpu')
        .groupBy('host')
        .quiet()
    |window()
        .period(60s)
        .every(15s)
        .fillPeriod()
    |max('usage_user')
        .as('value')
    |alert()
        .warn(lambda: "value" >= 1 AND "value" < 2)
        .crit(lambda: "value" >= 2)
        .message('{{ if eq .Level "WARNING" }} P2 {{ else if eq .Level "CRITICAL" }} P1 {{ else }} OK {{ end }}: {{.TaskName}} : {{.Group}} : usage_idle Threshold value - Warn: 30 - Crit: 10 percent')
    |influxDBOut()
        .database('telegraf')
        .retentionPolicy('autogen')
        .measurement('alerts')
